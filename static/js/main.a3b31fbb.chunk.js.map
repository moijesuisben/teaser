{"version":3,"sources":["variables.js","components/Logo.js","App.js","serviceWorker.js","index.js"],"names":["fs_sm","space1","useStyles","createUseStyles","logo","height","width","fill","position","display","bottom","variables","Logo","classes","className","viewBox","d","transform","landing_background","top","left","landing_content","flexDirection","alignItems","justifyContent","landing_text","textAlign","color","textTransform","landing_title","fontSize","fontWeight","marginBottom","landing_subtitle","landing_enter","fontStyle","textDecoration","textShadow","landing_contact","right","App","useState","vantaEffect","setVantaEffect","vantaRef","useRef","useEffect","HALO","el","current","destroy","src","autoPlay","loop","preload","volume","ref","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sPAGaA,EAAO,4DAsBPC,EAAS,4DCrBhBC,EAAYC,YAAgB,CAChCC,KAAM,CACJC,OAAQ,gEACRC,MAAO,gEACPC,KDWkB,UCVlBC,SAAU,WACVC,QAAS,OACTC,OAAQC,KAIG,SAASC,IACtB,IAAMC,EAAUX,IAEhB,OACE,yBACEY,UAAWD,EAAQT,KACnBW,QAAQ,qBAER,uCACA,0BACEC,EAAE,i2CACFC,UAAU,0BAEZ,0BACED,EAAE,uLACFC,UAAU,2B,sCCvBZf,EAAYC,YAAgB,CAChCe,mBAAoB,CAClBV,SAAU,WACVW,IAAK,EACLC,KAAM,EACNf,OAAQ,QACRC,MAAO,SAITe,gBAAiB,CACfhB,OAAQ,QACRG,SAAU,WACVC,QAAS,OACTa,cAAe,SACfC,WAAY,SACZC,eAAgB,UAElBC,aAAc,CACZC,UAAW,SACX,QAAS,CACPC,MFTgB,UEUhBC,cAAe,cAGnBC,cAAe,CACbC,SF3BgB,4DE4BhBC,WFxBoB,IEyBpBC,aAAc,GAEhBC,iBAAkB,CAChBH,SAAUnB,EACVoB,WF5BqB,IE6BrBC,aAAcrB,GAEhBuB,cAAe,CACbC,UAAWxB,EACXoB,WFhCmB,IEiCnBK,eAAgB,OAChB,UAAW,CACTT,MF5BgB,UE6BhB,sBAAuB,kBACvBU,WAAY,qCAGhBC,gBAAiB,CACfR,SFnDgB,4DEoDhBC,WF3CqB,IE4CrBJ,MFpCkB,UEqClBC,cAAe,YACfQ,eAAgB,OAChB5B,SAAU,WACVE,OAAQC,EACR4B,MAAO5B,EACPqB,aAAc,4DACd,UAAW,CACTL,MF5CgB,UE6ChB,sBAAuB,kBACvBU,WAAY,uCA+CHG,MA1Cf,WACE,IAAM3B,EAAUX,IADH,EAGyBuC,mBAAS,GAHlC,mBAGNC,EAHM,KAGOC,EAHP,KAIPC,EAAWC,iBAAO,MAcxB,OAbAC,qBAAU,WAQR,OAPKJ,GACHC,EACEI,IAAK,CACHC,GAAIJ,EAASK,WAIZ,WACDP,GAAaA,EAAYQ,aAE9B,CAACR,IAGF,oCACE,kBAAC,IAAD,CAAkBS,IAAI,YAAYC,UAAQ,EAACC,MAAI,EAACC,SAAO,EAACC,OAAQ,KAChE,yBAAKzC,UAAWD,EAAQK,mBAAoBsC,IAAKZ,IACjD,yBAAK9B,UAAWD,EAAQQ,iBACtB,yBAAKP,UAAWD,EAAQY,cACtB,wBAAIX,UAAWD,EAAQgB,eAAvB,mBACA,wBAAIf,UAAWD,EAAQoB,kBAAvB,gCAGA,wDAEF,kBAACrB,EAAD,MACA,uBACEE,UAAWD,EAAQyB,gBACnBmB,KAAK,mCAFP,cCzFYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a3b31fbb.chunk.js","sourcesContent":["\n/* FONT SIZE */\nexport const fs_xs ='calc(12px + (15 - 12) * ((100vw - 320px) / (1920 - 320)))';\nexport const fs_sm ='calc(15px + (30 - 15) * ((100vw - 320px) / (1920 - 320)))';\nexport const fs_md ='calc(20px + (40 - 20) * ((100vw - 320px) / (1920 - 320)))';\nexport const fs_lg ='calc(25px + (50 - 25) * ((100vw - 320px) / (1920 - 320)))';\nexport const fs_xl ='calc(40px + (80 - 40) * ((100vw - 320px) / (1920 - 320)))';\n\n/* FONT WEIGHT */\nexport const fw_thin = 100;\nexport const fw_light = 300;\nexport const fw_medium = 500;\nexport const fw_bold = 700;\nexport const fw_black = 900;\n\n\n/* COLOR */\nexport const deepFire = '#020400';\nexport const toryBlue = '#0B5AA2';\nexport const pumice = '#CBCCCB';\nexport const heavyMetal = '#393A38';\nexport const white = '#f8f9fa';\n\n/* SPACING */\n\nexport const space1 = 'calc(25px + (50 - 25) * ((100vw - 320px) / (1920 - 320)))';\nexport const space2 = 'calc(50px + (100 - 50) * ((100vw - 320px) / (1920 - 320)))';\nexport const space3 = 'calc(75px + (150 - 75) * ((100vw - 320px) / (1920 - 320)))';\n\n/*  */\n","import React from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport * as variables from \"../variables\";\n\nconst useStyles = createUseStyles({\n  logo: {\n    height: \"calc(35.5px + (71 - 35.5) * ((100vw - 320px) / (1920 - 320)))\",\n    width: \"calc(35.5px + (71 - 35.5) * ((100vw - 320px) / (1920 - 320)))\",\n    fill: variables.pumice,\n    position: \"absolute\",\n    display: \"flex\",\n    bottom: variables.space1,\n  },\n});\n\nexport default function Logo() {\n  const classes = useStyles();\n\n  return (\n    <svg\n      className={classes.logo}\n      viewBox=\"0 0 439.09 439.32\"\n    >\n      <title>logo</title>\n      <path\n        d=\"M197,30c5.51,2.14,11.49,3.53,16.45,6.59,11,6.8,14.87,17.82,15.49,30.25,1.18,23.72-2.83,46.87-8.63,69.65-6.64,26.1-14.14,52-21.84,77.8-2.71,9.06-1.31,15.88,5.45,22.57,7.74,7.67,16.89,12.27,27.1,15.18a220.39,220.39,0,0,1,69,33c37.73,27.15,41.85,65.4,26.4,102.27-7.76,18.52-20.7,33.26-35.11,46.84-7.27,6.85-14.66,13.57-22.07,20.28-7.85,7.12-7.89,7.08-1.2,14.88-8-.49-11.21-6.58-6.48-13.17,4.17-5.8,9.06-11.09,13.64-16.59,13.66-16.42,27-33.09,34.51-53.44a88.72,88.72,0,0,0,5.25-37.31c-1.22-17.82-10.94-30.6-24.32-41.28-15.39-12.28-33.09-20.4-50.8-28.52q-18.62-8.52-37.23-17c-20.83-9.55-29-26.67-23.85-49,6.74-29.16,13.93-58.25,19.49-87.65,2.88-15.25,3-31.08,3.67-46.68.19-4.28-1.4-8.89-3.11-13-2.28-5.43-7.19-7.5-12.34-4.69a52.08,52.08,0,0,0-14,10.8c-13.58,15.39-22.58,33.69-31.32,52C115.16,178.29,95.3,235.18,74,291.48,66.2,312,57.74,332.26,49.41,352.56c-1.28,3.11-3.57,5.79-5.38,8.67l-1.65-.11c-.8-2.38-2-4.71-2.32-7.15-1.78-15.37-4.34-30.74-4.81-46.16C33.64,254.88,32.06,201.93,31.91,149c-.09-29.76,2.53-59.52,4.23-89.27.31-5.59,1.76-11.17,3.24-16.61.52-1.9,3-4.87,4.07-4.67,2,.39,4.66,2.42,5.23,4.32,1.86,6.18,3.63,12.54,4.11,18.94,1.69,22.07,2.36,44.23,4.28,66.29,2,23.36,5.07,46.64,7.7,70A43.32,43.32,0,0,0,66.2,203c2.78-4.24,5.09-7.21,6.82-10.5,11.06-21.06,21.78-42.32,33-63.28,14.44-26.88,29.73-53.25,50.54-75.88A138.59,138.59,0,0,1,169.4,41.47,50.75,50.75,0,0,1,195,30Z\"\n        transform=\"translate(-31.91 -30)\"\n      />\n      <path\n        d=\"M471,431c-.43.85-.92,1.68-1.27,2.56-4,10-13.73,15.35-24.05,13.2a20.89,20.89,0,0,1-16.43-20.46c.11-10,7.15-18.59,16.6-20.28,10.72-1.92,20.09,3.3,23.94,13.32.35.91.81,1.77,1.21,2.66Z\"\n        transform=\"translate(-31.91 -30)\"\n      />\n    </svg>\n  );\n}\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport * as variables from \"./variables\";\nimport Logo from \"./components/Logo\";\nimport HALO from \"vanta/dist/vanta.halo.min\";\nimport ReactAudioPlayer from \"react-audio-player\";\n\nconst useStyles = createUseStyles({\n  landing_background: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    height: \"100vh\",\n    width: \"100vw\",\n    // backgroundImage: \"url(media/medium.jpg)\",\n    // backgroundSize: \"cover\",\n  },\n  landing_content: {\n    height: \"100vh\",\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  landing_text: {\n    textAlign: \"center\",\n    \"& > *\": {\n      color: variables.pumice,\n      textTransform: \"uppercase\",\n    },\n  },\n  landing_title: {\n    fontSize: variables.fs_xl,\n    fontWeight: variables.fw_light,\n    marginBottom: 0,\n  },\n  landing_subtitle: {\n    fontSize: variables.fs_sm,\n    fontWeight: variables.fw_medium,\n    marginBottom: variables.space1,\n  },\n  landing_enter: {\n    fontStyle: variables.fs_sm,\n    fontWeight: variables.fw_bold,\n    textDecoration: \"none\",\n    \"&:hover\": {\n      color: variables.pumice,\n      \"-webkit-text-stroke\": \"0px transparent\",\n      textShadow: \"0px 0px 10px rgba(203,204,203,1)\",\n    },\n  },\n  landing_contact: {\n    fontSize: variables.fs_xs,\n    fontWeight: variables.fw_medium,\n    color: variables.pumice,\n    textTransform: \"uppercase\",\n    textDecoration: \"none\",\n    position: \"absolute\",\n    bottom: variables.space1,\n    right: variables.space1,\n    marginBottom: \"calc(10px + (20 - 10) * ((100vw - 320px) / (1920 - 320)))\",\n    \"&:hover\": {\n      color: variables.pumice,\n      \"-webkit-text-stroke\": \"0px transparent\",\n      textShadow: \"0px 0px 10px rgba(203,204,203,1)\",\n    },\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n\n  const [vantaEffect, setVantaEffect] = useState(0);\n  const vantaRef = useRef(null);\n  useEffect(() => {\n    if (!vantaEffect) {\n      setVantaEffect(\n        HALO({\n          el: vantaRef.current,\n        })\n      );\n    }\n    return () => {\n      if (vantaEffect) vantaEffect.destroy();\n    };\n  }, [vantaEffect]);\n\n  return (\n    <>\n      <ReactAudioPlayer src=\"sound.mp3\" autoPlay loop preload volume={0.5} />\n      <div className={classes.landing_background} ref={vantaRef}></div>\n      <div className={classes.landing_content}>\n        <div className={classes.landing_text}>\n          <h1 className={classes.landing_title}>benjamin arpage</h1>\n          <h2 className={classes.landing_subtitle}>\n            Creative Front-End Developer\n          </h2>\n          <h3>Next coming soon â€¦</h3>\n        </div>\n        <Logo />\n        <a\n          className={classes.landing_contact}\n          href=\"mailto:benjaminarpage@gmail.com\"\n        >\n          Contact\n        </a>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}